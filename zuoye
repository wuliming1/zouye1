
package main

import (
	"flag"
	"fmt"
	"io"
	"log"
	"net/http"

	_ "net/http/pprof"

	"github.com/golang/glog"
)

func main() {
	flag.Set("v", "4")
	glog.V(2).Info("Starting http server...")
	http.HandleFunc("/", rootHandler)
	c, python, java := true, false, "no!"
	fmt.Println(c, python, java)
	err := http.ListenAndServe(":80", nil)
	if err != nil {
		log.Fatal(err)
	}

}

func healthz(w http.ResponseWriter, r *http.Request) {
	io.WriteString(w, "ok\n")
}

func rootHandler(w http.ResponseWriter, r *http.Request) {
	fmt.Println("entering root handler")
	user := r.URL.Query().Get("user")
	if user != "" {
		io.WriteString(w, fmt.Sprintf("hello [%s]\n", user))
	} else {
		io.WriteString(w, "hello [stranger]\n")
	}
	io.WriteString(w, "===================Details of the http request header:============\n")
	for k, v := range r.Header {
		io.WriteString(w, fmt.Sprintf("%s=%s\n", k, v))
	}
}



#####################################


hello [stranger]
===================Details of the http request header:============
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9]
Sec-Fetch-User=[?1]
Accept-Language=[zh-CN,zh;q=0.9]
Sec-Ch-Ua=["Google Chrome";v="93", " Not;A Brand";v="99", "Chromium";v="93"]
Sec-Ch-Ua-Mobile=[?0]
Upgrade-Insecure-Requests=[1]
Connection=[keep-alive]
Cache-Control=[max-age=0]
Sec-Ch-Ua-Platform=["Windows"]
Accept-Encoding=[gzip, deflate, br]
User-Agent=[Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.82 Safari/537.36]
Sec-Fetch-Site=[none]
Sec-Fetch-Mode=[navigate]
Sec-Fetch-Dest=[document]

